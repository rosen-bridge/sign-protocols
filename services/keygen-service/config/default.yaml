---
# all time related configs are in seconds (timeout, interval, ...)

api:
  port: 8080 # service deployment port
  host: 'localhost' # service listening host
  jsonBodyLimit: 50
  maxRequestsPerMinute: 100_000
tss:
  path: './bin/tss.exe' # path to tss executable file
  configPath: './bin/conf/conf.env'
  url: 'http://localhost'
  port: 9000
p2p:
  addresses: # relay configs
    - peerId: ''
      address: ''
  bootstrapTimeout: 10 # timeout of connecting to bootstrap nodes (which are relays in our case)
  pubsubInterval: 10 # interval of publishing peer ids to the network for peer discovery
  apiCallbackTimeout: 8 # timeout of api calls which happen when subscribing a channel in dialer
  loggingInterval: 60 # interval of logging jobs
  messageSendingRetriesExponentialFactor: 5 # exponential factor for calculating message retries interval
  messageSendingRetriesMaxCount: 3 # number of retires before dropping a failed message
  peerIdFilePath: './peer-dialer.json'
  guardsCount: 30 # total number of guards in the network
  allowedStreamsPerGuard: 3 # the number of streams allowed for each guard connected
  relayReconnectionInterval: 30 # Interval of tries to re-connect a disconnected relay
  brokenTimeAllowed: 1200 # seconds allowed to be unstable
logs:
  - type: 'file' # [file, console]
    path: './logs/' # path to log files (only for rotateFile type)
    maxSize: '20m' # maximum size of each log file (20 MB) (only for rotateFile type)
    maxFiles: '14d' # maximum number of log files (14 days) (only for rotateFile type)
    level: 'info' # [debug, info, warn, error]
  - type: 'console'
    level: 'info'
keygen: # only set when you want to start keygen process
  guards: 0 # total number of guards
  threshold: 0 # signing threshold (at least threshold + 1 guards are required)
  algorithm: eddsa # keygen algorithm. only eddsa supported
